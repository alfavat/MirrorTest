@model NewsDetail

<style>
    #newsCount{
        display:none;
    }

    video {
        width: 100% !important;
        height: auto !important;
    }
</style>

@if (Model != null)
{
<div class="anchor" url="@Model.Url">
    <div class="news-photo">
        @if (Model.NewsTypeEntityId == (int)Entity.Enums.NewsTypeEntities.VideoGallery && Model.NewsFileList.HasValue() &&
                           Model.NewsFileList.Any(x => x.NewsFileTypeEntityId == (int)Entity.Enums.NewsFileTypeEntities.GalleryVideo))
        {
            <video id="main-video"
                   class="video-js"
                   controls
                   preload="auto"
                   width="100"
                   height="300"
                   poster="@Model.NewsFileList.Where(x => x.NewsFileTypeEntityId == (int)Entity.Enums.NewsFileTypeEntities.GalleryVideo).Select(s => s.CoverFileName).FirstOrDefault()"
                   data-setup="{}">
                <source src="@Model.NewsFileList.Where(x => x.NewsFileTypeEntityId == (int)Entity.Enums.NewsFileTypeEntities.GalleryVideo).Select(s => s.FileName).FirstOrDefault()" type="video/mp4" />
                <p class="vjs-no-js">Tarayıcınız güncel değil</p>
            </video>
            <br />
        }
        else
        {
            <div class="post-media post-featured-image">
                <img src="@Model.NewsFileList.Where(x => x.NewsFileTypeEntityId == (int)Entity.Enums.NewsFileTypeEntities.MainImage).Select(s => s.FileName).FirstOrDefault()" class="img-responsive m0a" width="100%" alt="@Model.NewsFileList.Where(x => x.NewsFileTypeEntityId == (int)Entity.Enums.NewsFileTypeEntities.MainImage).Select(s => s.Title).FirstOrDefault()">
            </div>
        }

    </div>
    <div class="news-wrapper">
        <h1 class="news-headline">@Model.InnerTitle </h1>
        <div class="news-date"><span>@Model.PublishDate.Value.ToString("dd MMMM dddd yyyy") @Model.PublishTime.Value.ToString().Substring(0, 5)</span></div>
        <div class="news-buttons-wrapper clearfix">
            <a href="https://www.facebook.com/sharer/sharer.php?u=@LayoutModel.WebUIUrl@Model.Url&t=@Model.Title" class="news-button facebook" target="_blank"><i class="fa fa-facebook" aria-hidden="true"></i></a>
            <a href="https://twitter.com/intent/tweet?url=@LayoutModel.WebUIUrl@Model.Url&text=@Model.Title" class="news-button twitter" target="_blank"><i class="fa fa-twitter" aria-hidden="true"></i></a>
            <a href="https://api.whatsapp.com/send?text=@LayoutModel.WebUIUrl@Model.Url" class="news-button whatsapp" target="_blank"><i class="fa fa-whatsapp" aria-hidden="true"></i></a>
            <a href="#" class="news-button textsize t-down">A-</a>
            <a href="#" class="news-button textsize t-up">A+</a>
            <a href="javascript:;" class="news-button facebook divUser" onclick="AddOrDeleteBookmark(@Model.Id , this);" id="btnNewsBookmark_@Model.Id">
                @if (!Model.BookMarkStatus)
                {
                    <i class="fa fa-bookmark"></i>
                }
                else
                {
                    <i class="fa fa-remove"></i>
                }
            </a>
        </div>
        <div class="news-container">

            <div class="news-container-text">

                @Html.Raw(Model.HtmlContent)
                @{ int galleryIndex = 1; }
                @if (Model.NewsTypeEntityId == (int)Entity.Enums.NewsTypeEntities.ImageGallery && Model.NewsFileList.HasValue())
                {
                    @foreach (var image in Model.NewsFileList.Where(f => f.NewsFileTypeEntityId == (int)Entity.Enums.NewsFileTypeEntities.GalleryPhoto).ToList())
                    {
                        <div id="@galleryIndex" url="@Model.Url/@galleryIndex" class="anchor" style="margin-top:20px;margin-bottom:20px;">
                            <div class="post-photo-gallery-number">
                                @galleryIndex
                            </div>
                            <a href="javascript:;" class="gallery-popup">
                                @* @image.FileName *@
                                <img class="img-fluid" src="@image.FileName" alt="@image.Title">
                            </a>
                            <h4 style="color:#000;padding:10px;">@image.Title</h4>
                            <span style="color:#646464; padding:10px;">@image.Description</span>
                            <hr>
                        </div>
                        { galleryIndex++; }
                    }
                }
                else if (Model.NewsTypeEntityId == (int)Entity.Enums.NewsTypeEntities.VideoGallery && Model.NewsFileList.HasValue())
                {
                    foreach (var video in Model.NewsFileList.Where(f => f.NewsFileTypeEntityId == (int)Entity.Enums.NewsFileTypeEntities.GalleryVideo).Skip(1).ToList())
                    {
                        <video id="my-video-@galleryIndex"
                               class="video-js"
                               controls
                               preload="auto"
                               width="640"
                               height="300"
                               poster="@video.CoverFileName"
                               data-setup="{}">
                            <source src="@video.FileName" type="video/mp4" />
                            <p class="vjs-no-js">Tarayıcınız güncel değil</p>
                        </video>
                        <br />

                        { galleryIndex++; }
                    }
                }

            </div>

        </div>
    </div>

    @* Reklam Alanı:
        <div class="news-bottom-banner"><img src="http://placehold.it/755x300" class="img-responsive m0a"></div>
    *@

    @if (Model.NewsTagList.HasValue())
    {
        <div class="news-tags clearfix">
            @foreach (var tag in Model.NewsTagList)
            {
                <a href="~/etiket/@tag.Url" class="btn btn-default">@tag.TagName</a>
            }
        </div>
    }


    @*<a href="" class="oda-title" style="margin-top: 20px;">
            Yorumlar @if (Model.CommentList.HasValue())@Html.Raw("(" + Model.CommentList.Count + ")")
        </a>
        <div class="comment-form mb14 clearfix">
            <div class="divNotUser">
                <div class="pull-left mb14">Yorum yazmak için <a href="~/login" class="c-red">üye girişi</a> yapmalısınız.</div>
            </div>
            <div class="divUser">
                <div class="form-group"><textarea class="form-control vresize" placeholder="Yorumunuz" id="txtComment_@Model.Id" maxlength="200"></textarea></div>
                <button class="btn btn-primary pull-right" onclick="SaveComment(@Model.Id);">@Translator.GetByKey("Send")</button>
            </div>
        </div>


        @if (Model.CommentList.HasValue())
        {
            @await Html.PartialAsync("_NewsComment", Model.CommentList)

            @if (Model.CommentsCount > 5)
            {
                <button class="btn btn-default btn-block" data-id="@Model.Id" data-total="@Model.CommentsCount" onclick="loadMoreComments(this)">@Translator.GetByKey("LoadMore")</button>
            }
        }
        else
        {
            <div>
                @Translator.GetByKey("EmptyCommentList")
            </div>
        }*@

    <!-- news block end -->

    @if (Model.NewsRelatedNewsList.HasValue())
    {
        <div class="oda-title" style="margin-top:15px;">@Translator.GetByKey("RelatedNews")</div>
        <div class="column-news-wrapper">
            @foreach (var relatedNews in Model.NewsRelatedNewsList)
            {
                <a href="@relatedNews.RelatedNews.Url" class="news-item-link br5">
                    <div class="left rltv">
                        <img src="@relatedNews.RelatedNews.Thumbnail" class="img-responsive m0a" alt="@relatedNews.RelatedNews.Title">
                    </div>
                    <div class="right">
                        @*<div class="news-cat gundem">GÜNDEM</div>*@
                        <div class="news-title">@relatedNews.RelatedNews.Title</div>
                    </div>
                    <div class="clearfix"></div>
                </a>

            }
            <div class="clearfix"></div>
        </div>
    }

    <div class="news-seperator"></div>

    <!-- news block -->
    <div id="newsCount">@Model.RelatedNewsCount</div>
</div>

    @section SectionBottom{
        <script>
        UserInit();
        var rootPath = "@Url.Content("")";

        function UserInit() {
            var token = $.cookie("Token");
            if (token == "" || token == null || token == undefined) {
                $(".divUser").hide();
                $(".divNotUser").show();
            } else {
                $(".divUser").show();
                $(".divNotUser").hide();
            }
        }

        function AddOrDeleteBookmark(_newsId, el) {
            var isAdd = $(el).find('>i').hasClass('fa-bookmark');
            console.log(isAdd);
            console.log($(el));
            console.log($(el).find('>i'));
            var param = { 'newsId': _newsId };
            $.ajax({
                type: "POST",
                url: rootPath + (isAdd ? "/add-bookmark" : "/delete-bookmark"),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(param),
                success: function (result) {
                    var msg = "";
                    if (isAdd) {
                        msg = "@Translator.GetByKey("SaveBookmarkSuccess")";
                        $(el).find('.fa-bookmark').removeClass('fa-bookmark').addClass('fa-remove');
                    }
                    else
                    {
                        msg = "@Translator.GetByKey("DeleteBookmarkSuccess")";
                        $(el).find('.fa-remove').removeClass('fa-remove').addClass('fa-bookmark');
                    }
                    swal({
                        title: msg,
                        text: "",
                        icon: "success",
                        showCancelButton: false,
                        showConfirmButton: false,
                        timer: 1000
                    });
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

         function SaveComment(_newsId) {
            var content = $('#txtComment_' + _newsId).val();
            if (content=="") {
                return;
            }

            var param = { 'newsId': _newsId, 'content': content };
            $.ajax({
                type: "POST",
                url: rootPath + "/add-comment",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(param),
                success: function (result) {
                    $('#txtComment_' + _newsId).val('')
                    swal({
                        title: "@Translator.GetByKey("CommentSaveSuccess")",
                        text: "",
                        icon: "success",
                        showCancelButton: false,
                        showConfirmButton: false,
                        timer: 2500
                    });
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
        </script>
    }
}
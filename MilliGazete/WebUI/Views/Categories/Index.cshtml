@model CategoryDto
@{
    if (Model != null)
    {
        ViewData["Title"] = Model.CategoryName + " - " + @Translator.GetByKey("ProjectName");
        ViewData["Description"] = Model.SeoDescription;
        ViewData["Keywords"] = Model.SeoKeywords;
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}

@section SectionTop{
    @if (Model != null)
    {
        <!-- General, facebook, whatsapp -->
        <meta property="og:url" content="@LayoutModel.WebMobileUIUrl@Model.Url" />
        <meta property="og:type" content="news" />
        <meta property="og:title" content="@Model.CategoryName" />
        <meta property="og:description" content="@Model.SeoDescription" />
        <meta property="og:image" content="@Model.FeaturedImageFile?.FileName" />

        <!-- Twitter -->
        <meta name="twitter:card" content="summary">
        <meta name="twitter:site" content="@LayoutModel.Option.Twitter">
        <meta name="twitter:url" content="@LayoutModel.WebMobileUIUrl@Model.Url">
        <meta name="twitter:title" content="@Model.CategoryName">
        <meta name="twitter:description" content="@Model.SeoDescription">
        <meta name="twitter:image" content="@Model.FeaturedImageFile?.FileName">
        <meta name="twitter:domain" content="@LayoutModel.WebMobileUIUrl">
    }
}
@if (Model != null)
{
    <div class="container">
        <div class="row">
            <div class="col-12">
                <h1 style="color: @Model.StyleCode !important;border-left: 5px solid @Model.StyleCode !important;padding-left:10px !important;">@Model.CategoryName</h1>
            </div>
        </div>
        <div class="row">
            <div class="col-8">
                @await Component.InvokeAsync("MainHeading", new { url = Model.Url })
            </div>
            <div class="col-4">
                Reklam Alanı
            </div>
        </div>
        <div class="row">
            @await Component.InvokeAsync("CategoryPageNews", new { url = Model.Url })
        </div>
    </div>
}


@section SectionBottom{

    <!-- Swiper core JavaScript -->
    <script src="~/js/swiper-bundle.min.js"></script>

    <script>
        var swiper_top_main = new Swiper('.swiper-container-main', {
            loop: true,
            navigation: {
                nextEl: '.swiper-button-next-main',
                prevEl: '.swiper-button-prev-main',
            },
            pagination: {
                el: '.swiper-pagination-main',
                clickable: true,
                renderBullet: function (index, className) {
                    return '<span class="' + className + '">' + (index + 1) + '</span>';
                },
            },
            autoplay: {
                delay: 7000,
                disableOnInteraction: false,
            },
        });
    </script>
}